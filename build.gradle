plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "1.8"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

	implementation 'org.apache.httpcomponents:httpclient:4.5'

	implementation 'org.jetbrains:annotations:20.1.0'
	implementation 'org.json:json:20190722'

	implementation 'org.projectlombok:lombok:1.18.20'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//스웨거
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//주소 -> 좌표
	implementation group: 'org.json', name: 'json', version: '20160810'
	implementation group: 'com.google.code.geocoder-java', name: 'geocoder-java', version: '0.16'

	//json
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	//주소 엑셀로 받기
	implementation group: 'org.apache.poi', name: 'poi', version: '4.0.1'
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.11'

	//querydsl 추가 시작
	implementation 'com.querydsl:querydsl-jpa'

	//mysql 실행
	runtimeOnly 'mysql:mysql-connector-java'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc' // Jdbc, Driver

	// AWS S3
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.228')
	implementation 'com.amazonaws:aws-java-sdk-s3'

	// AWS S3 TEST MOCK TEST
	testImplementation 'io.findify:s3mock_2.12:0.2.4'

	//json
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation group: 'org.jdom', name: 'jdom2', version: '2.0.6.1'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl" // compileQuerydsl 경로
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}